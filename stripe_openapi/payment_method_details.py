from sqlalchemy import Column, ForeignKey, Identity, Integer, String, Table

from . import metadata

PaymentMethodDetails.Json = Table(
    "payment_method_details.json",
    metadata,
    Column(
        "ach_credit_transfer",
        PaymentMethodDetailsAchCreditTransfer,
        ForeignKey("PaymentMethodDetailsAchCreditTransfer"),
        nullable=True,
    ),
    Column(
        "ach_debit",
        PaymentMethodDetailsAchDebit,
        ForeignKey("PaymentMethodDetailsAchDebit"),
        nullable=True,
    ),
    Column(
        "acss_debit",
        PaymentMethodDetailsAcssDebit,
        ForeignKey("PaymentMethodDetailsAcssDebit"),
        nullable=True,
    ),
    Column(
        "affirm",
        PaymentMethodDetailsAffirm,
        ForeignKey("PaymentMethodDetailsAffirm"),
        nullable=True,
    ),
    Column(
        "afterpay_clearpay",
        PaymentMethodDetailsAfterpayClearpay,
        ForeignKey("PaymentMethodDetailsAfterpayClearpay"),
        nullable=True,
    ),
    Column(
        "alipay",
        PaymentFlowsPrivatePaymentMethodsAlipayDetails,
        ForeignKey("PaymentFlowsPrivatePaymentMethodsAlipayDetails"),
        nullable=True,
    ),
    Column(
        "au_becs_debit",
        PaymentMethodDetailsAuBecsDebit,
        ForeignKey("PaymentMethodDetailsAuBecsDebit"),
        nullable=True,
    ),
    Column(
        "bacs_debit",
        PaymentMethodDetailsBacsDebit,
        ForeignKey("PaymentMethodDetailsBacsDebit"),
        nullable=True,
    ),
    Column(
        "bancontact",
        PaymentMethodDetailsBancontact,
        ForeignKey("PaymentMethodDetailsBancontact"),
        nullable=True,
    ),
    Column(
        "blik",
        PaymentMethodDetailsBlik,
        ForeignKey("PaymentMethodDetailsBlik"),
        nullable=True,
    ),
    Column(
        "boleto",
        PaymentMethodDetailsBoleto,
        ForeignKey("PaymentMethodDetailsBoleto"),
        nullable=True,
    ),
    Column(
        "card",
        PaymentMethodDetailsCard,
        ForeignKey("PaymentMethodDetailsCard"),
        nullable=True,
    ),
    Column(
        "card_present",
        PaymentMethodDetailsCardPresent,
        ForeignKey("PaymentMethodDetailsCardPresent"),
        nullable=True,
    ),
    Column(
        "cashapp",
        PaymentMethodDetailsCashapp,
        ForeignKey("PaymentMethodDetailsCashapp"),
        nullable=True,
    ),
    Column(
        "customer_balance",
        PaymentMethodDetailsCustomerBalance,
        ForeignKey("PaymentMethodDetailsCustomerBalance"),
        nullable=True,
    ),
    Column(
        "eps",
        PaymentMethodDetailsEps,
        ForeignKey("PaymentMethodDetailsEps"),
        nullable=True,
    ),
    Column(
        "fpx",
        PaymentMethodDetailsFpx,
        ForeignKey("PaymentMethodDetailsFpx"),
        nullable=True,
    ),
    Column(
        "giropay",
        PaymentMethodDetailsGiropay,
        ForeignKey("PaymentMethodDetailsGiropay"),
        nullable=True,
    ),
    Column(
        "grabpay",
        PaymentMethodDetailsGrabpay,
        ForeignKey("PaymentMethodDetailsGrabpay"),
        nullable=True,
    ),
    Column(
        "ideal",
        PaymentMethodDetailsIdeal,
        ForeignKey("PaymentMethodDetailsIdeal"),
        nullable=True,
    ),
    Column(
        "interac_present",
        PaymentMethodDetailsInteracPresent,
        ForeignKey("PaymentMethodDetailsInteracPresent"),
        nullable=True,
    ),
    Column(
        "klarna",
        PaymentMethodDetailsKlarna,
        ForeignKey("PaymentMethodDetailsKlarna"),
        nullable=True,
    ),
    Column(
        "konbini",
        PaymentMethodDetailsKonbini,
        ForeignKey("PaymentMethodDetailsKonbini"),
        nullable=True,
    ),
    Column(
        "link",
        PaymentMethodDetailsLink,
        ForeignKey("PaymentMethodDetailsLink"),
        nullable=True,
    ),
    Column(
        "multibanco",
        PaymentMethodDetailsMultibanco,
        ForeignKey("PaymentMethodDetailsMultibanco"),
        nullable=True,
    ),
    Column(
        "oxxo",
        PaymentMethodDetailsOxxo,
        ForeignKey("PaymentMethodDetailsOxxo"),
        nullable=True,
    ),
    Column(
        "p24",
        PaymentMethodDetailsP24,
        ForeignKey("PaymentMethodDetailsP24"),
        nullable=True,
    ),
    Column(
        "paynow",
        PaymentMethodDetailsPaynow,
        ForeignKey("PaymentMethodDetailsPaynow"),
        nullable=True,
    ),
    Column(
        "pix",
        PaymentMethodDetailsPix,
        ForeignKey("PaymentMethodDetailsPix"),
        nullable=True,
    ),
    Column(
        "promptpay",
        PaymentMethodDetailsPromptpay,
        ForeignKey("PaymentMethodDetailsPromptpay"),
        nullable=True,
    ),
    Column(
        "sepa_credit_transfer",
        PaymentMethodDetailsSepaCreditTransfer,
        ForeignKey("PaymentMethodDetailsSepaCreditTransfer"),
        nullable=True,
    ),
    Column(
        "sepa_debit",
        PaymentMethodDetailsSepaDebit,
        ForeignKey("PaymentMethodDetailsSepaDebit"),
        nullable=True,
    ),
    Column(
        "sofort",
        PaymentMethodDetailsSofort,
        ForeignKey("PaymentMethodDetailsSofort"),
        nullable=True,
    ),
    Column(
        "stripe_account",
        PaymentMethodDetailsStripeAccount,
        ForeignKey("PaymentMethodDetailsStripeAccount"),
        nullable=True,
    ),
    Column(
        "type",
        String,
        comment="The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.\nAn additional hash is included on `payment_method_details` with a name matching this value.\nIt contains information specific to the payment method",
    ),
    Column(
        "us_bank_account",
        PaymentMethodDetailsUsBankAccount,
        ForeignKey("PaymentMethodDetailsUsBankAccount"),
        nullable=True,
    ),
    Column(
        "wechat",
        PaymentMethodDetailsWechat,
        ForeignKey("PaymentMethodDetailsWechat"),
        nullable=True,
    ),
    Column(
        "wechat_pay",
        PaymentMethodDetailsWechatPay,
        ForeignKey("PaymentMethodDetailsWechatPay"),
        nullable=True,
    ),
    Column("id", Integer, primary_key=True, server_default=Identity()),
)
__all__ = ["payment_method_details.json"]

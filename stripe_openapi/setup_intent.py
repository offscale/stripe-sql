from sqlalchemy import ARRAY, JSON, Boolean, Column, ForeignKey, Integer, String, Table

from stripe_openapi.account import Account
from stripe_openapi.application import Application
from stripe_openapi.customer import Customer
from stripe_openapi.mandate import Mandate

from . import metadata

SetupIntentJson = Table(
    "setup_intentjson",
    metadata,
    Column(
        "application",
        Application,
        ForeignKey("Application"),
        comment="ID of the Connect application that created the SetupIntent",
        nullable=True,
    ),
    Column(
        "attach_to_self",
        Boolean,
        comment="If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Accountâ€™s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer",
        nullable=True,
    ),
    Column(
        "automatic_payment_methods",
        PaymentFlowsAutomaticPaymentMethodsSetupIntent,
        ForeignKey("PaymentFlowsAutomaticPaymentMethodsSetupIntent"),
        comment="Settings for automatic payment methods compatible with this Setup Intent",
        nullable=True,
    ),
    Column(
        "cancellation_reason",
        String,
        comment="Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`",
        nullable=True,
    ),
    Column(
        "client_secret",
        String,
        comment="The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.\n\nThe client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret",
        nullable=True,
    ),
    Column(
        "created",
        Integer,
        comment="Time at which the object was created. Measured in seconds since the Unix epoch",
    ),
    Column(
        "customer",
        Customer,
        ForeignKey("DeletedCustomer"),
        comment="ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent",
        nullable=True,
    ),
    Column(
        "description",
        String,
        comment="An arbitrary string attached to the object. Often useful for displaying to users",
        nullable=True,
    ),
    Column(
        "flow_directions",
        ARRAY(String),
        comment="Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes",
        nullable=True,
    ),
    Column("id", String, comment="Unique identifier for the object", primary_key=True),
    Column(
        "last_setup_error",
        ApiErrors,
        ForeignKey("ApiErrors"),
        comment="The error encountered in the previous SetupIntent confirmation",
        nullable=True,
    ),
    Column(
        "latest_attempt",
        SetupAttempt,
        ForeignKey("SetupAttempt"),
        comment="The most recent SetupAttempt for this SetupIntent",
        nullable=True,
    ),
    Column(
        "livemode",
        Boolean,
        comment="Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode",
    ),
    Column(
        "mandate",
        Mandate,
        ForeignKey("Mandate"),
        comment="ID of the multi use Mandate generated by the SetupIntent",
        nullable=True,
    ),
    Column(
        "metadata",
        JSON,
        comment="Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format",
        nullable=True,
    ),
    Column(
        "next_action",
        SetupIntentNextAction,
        ForeignKey("SetupIntentNextAction"),
        comment="If present, this property tells you what actions you need to take in order for your customer to continue payment setup",
        nullable=True,
    ),
    Column(
        "object",
        String,
        comment="String representing the object's type. Objects of the same type share the same value",
    ),
    Column(
        "on_behalf_of",
        Account,
        ForeignKey("Account"),
        comment="The account (if any) for which the setup is intended",
        nullable=True,
    ),
    Column(
        "payment_method",
        PaymentMethod,
        ForeignKey("PaymentMethod"),
        comment="ID of the payment method used with this SetupIntent",
        nullable=True,
    ),
    Column(
        "payment_method_options",
        SetupIntentPaymentMethodOptions,
        ForeignKey("SetupIntentPaymentMethodOptions"),
        comment="Payment-method-specific configuration for this SetupIntent",
        nullable=True,
    ),
    Column(
        "payment_method_types",
        ARRAY(String),
        comment="The list of payment method types (e.g. card) that this SetupIntent is allowed to set up",
    ),
    Column(
        "single_use_mandate",
        Mandate,
        ForeignKey("Mandate"),
        comment="ID of the single_use Mandate generated by the SetupIntent",
        nullable=True,
    ),
    Column(
        "status",
        String,
        comment="[Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`",
    ),
    Column(
        "usage",
        String,
        comment="Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`",
    ),
)
__all__ = ["setup_intent.json"]
